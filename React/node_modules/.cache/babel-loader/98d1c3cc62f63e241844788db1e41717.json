{"ast":null,"code":"var _jsxFileName = \"/Users/gouravmohanty/Desktop/relive-frontend/relive/src/components/Generate/Generate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Generate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Generate() {\n  _s();\n\n  const [imageFile, setImageFile] = useState(null);\n  const [audioFile, setAudioFile] = useState(null);\n  const [chatFile, setChatFile] = useState(null);\n  const [personalityTraits, setPersonalityTraits] = useState([]);\n  const [newTrait, setNewTrait] = useState(\"\");\n\n  function handleImageChange(event) {\n    setImageFile(event.target.files[0]);\n  }\n\n  function handleAudioChange(event) {\n    setAudioFile(event.target.files[0]);\n  }\n\n  function handleChatChange(event) {\n    setChatFile(event.target.files[0]);\n  }\n\n  function handleNewTraitChange(event) {\n    setNewTrait(event.target.value);\n  }\n\n  function addPersonalityTrait() {\n    if (newTrait.trim() !== \"\") {\n      setPersonalityTraits([...personalityTraits, newTrait.trim()]);\n      setNewTrait(\"\");\n    }\n  }\n\n  function removePersonalityTrait(index) {\n    const updatedTraits = personalityTraits.filter((_, i) => i !== index);\n    setPersonalityTraits(updatedTraits);\n  } // const Generate = () => {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Generate\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-g\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stroke-text\",\n          children: \"Generate Your\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Ones In The Form Of\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stroke-text\",\n          children: \"Avatars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-g\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \".generate-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-name\",\n            htmlFor: \"imageInput\",\n            children: \"Choose Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imageInput\",\n            accept: \"image/*\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-name\",\n            htmlFor: \"audioInput\",\n            children: \"Choose Audio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"audioInput\",\n            accept: \"audio/*\",\n            onChange: handleAudioChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-name\",\n            htmlFor: \"chatInput\",\n            children: \"Upload Chats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"chatInput\",\n            accept: \".txt\",\n            onChange: handleChatChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"input-instruction\",\n            children: \"Export the chat as a .txt file.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-name\",\n            htmlFor: \"personalityInput\",\n            children: \"Personality Traits:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personality-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"personalityInput\",\n              placeholder: \"Type a word and press enter\",\n              value: newTrait,\n              onChange: handleNewTraitChange,\n              onKeyUp: event => {\n                if (event.key === \"Enter\") {\n                  addPersonalityTrait();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"personality-tags\",\n              children: personalityTraits.map((trait, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tag\",\n                children: [trait, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"remove\",\n                  onClick: () => removePersonalityTrait(index),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"input-instruction\",\n            children: \"Any personality trait like old, sweet, etc. works.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-button\",\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Generate, \"cjrar1BxenLaBY0WW6iMfv73CCc=\");\n\n_c = Generate;\nexport default Generate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Generate\");","map":{"version":3,"names":["React","useState","Generate","imageFile","setImageFile","audioFile","setAudioFile","chatFile","setChatFile","personalityTraits","setPersonalityTraits","newTrait","setNewTrait","handleImageChange","event","target","files","handleAudioChange","handleChatChange","handleNewTraitChange","value","addPersonalityTrait","trim","removePersonalityTrait","index","updatedTraits","filter","_","i","key","map","trait"],"sources":["/Users/gouravmohanty/Desktop/relive-frontend/relive/src/components/Generate/Generate.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Generate.css\";\n\nfunction Generate() {\n  const [imageFile, setImageFile] = useState(null);\n  const [audioFile, setAudioFile] = useState(null);\n  const [chatFile, setChatFile] = useState(null);\n  const [personalityTraits, setPersonalityTraits] = useState([]);\n  const [newTrait, setNewTrait] = useState(\"\");\n\n  function handleImageChange(event) {\n    setImageFile(event.target.files[0]);\n  }\n\n  function handleAudioChange(event) {\n    setAudioFile(event.target.files[0]);\n  }\n\n  function handleChatChange(event) {\n    setChatFile(event.target.files[0]);\n  }\n\n  function handleNewTraitChange(event) {\n    setNewTrait(event.target.value);\n  }\n\n  function addPersonalityTrait() {\n    if (newTrait.trim() !== \"\") {\n      setPersonalityTraits([...personalityTraits, newTrait.trim()]);\n      setNewTrait(\"\");\n    }\n  }\n\n  function removePersonalityTrait(index) {\n    const updatedTraits = personalityTraits.filter((_, i) => i !== index);\n    setPersonalityTraits(updatedTraits);\n  }\n\n  // const Generate = () => {\n  return (\n    <div className=\"Generate\">\n      <div className=\"left-g\">\n        <hr />\n        <div>\n          <span className=\"stroke-text\">Generate Your</span>\n          <span>Loved</span>\n        </div>\n        <div>\n          <span>Ones In The Form Of</span>\n          <span className=\"stroke-text\">Avatars</span>\n        </div>\n      </div>\n      <div className=\"right-g\">\n        {/* <form action=\"\" className=\"generate-container\">\n          <input\n            type=\"file\"\n            title=\"Upload Image\"\n            id=\"img\"\n            onChange=\"pressed(\"\n          />\n          <label htmlFor=\"img\">Upload Image</label>\n          <input\n            type=\"file\"\n            title=\"Upload Image\"\n            id=\"img\"\n            onChange=\"pressed(\"\n          />\n          <label htmlFor=\"img\">Upload Image</label>\n          <input\n            type=\"file\"\n            title=\"Upload Image\"\n            id=\"img\"\n            onChange=\"pressed(\"\n          />\n          <label htmlFor=\"img\">Upload Image</label>\n        </form> */}\n        <div className=\".generate-container\">\n          <div className=\"form-input\">\n            <label className=\"label-name\" htmlFor=\"imageInput\">\n              Choose Image:\n            </label>\n            <input\n              type=\"file\"\n              id=\"imageInput\"\n              accept=\"image/*\"\n              onChange={handleImageChange}\n            />\n          </div>\n\n          <div className=\"form-input\">\n            <label className=\"label-name\" htmlFor=\"audioInput\">\n              Choose Audio:\n            </label>\n            <input\n              type=\"file\"\n              id=\"audioInput\"\n              accept=\"audio/*\"\n              onChange={handleAudioChange}\n            />\n          </div>\n\n          <div className=\"form-input\">\n            <label className=\"label-name\" htmlFor=\"chatInput\">\n              Upload Chats:\n            </label>\n            <input\n              type=\"file\"\n              id=\"chatInput\"\n              accept=\".txt\"\n              onChange={handleChatChange}\n            />\n            <p className=\"input-instruction\">Export the chat as a .txt file.</p>\n          </div>\n\n          <div className=\"form-input\">\n            <label className=\"label-name\" htmlFor=\"personalityInput\">\n              Personality Traits:\n            </label>\n            <div className=\"personality-input\">\n              <input\n                type=\"text\"\n                id=\"personalityInput\"\n                placeholder=\"Type a word and press enter\"\n                value={newTrait}\n                onChange={handleNewTraitChange}\n                onKeyUp={(event) => {\n                  if (event.key === \"Enter\") {\n                    addPersonalityTrait();\n                  }\n                }}\n              />\n              <div className=\"personality-tags\">\n                {personalityTraits.map((trait, index) => (\n                  <div className=\"tag\" key={index}>\n                    {trait}\n                    <span\n                      className=\"remove\"\n                      onClick={() => removePersonalityTrait(index)}\n                    >\n                      &times;\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <p className=\"input-instruction\">\n              Any personality trait like old, sweet, etc. works.\n            </p>\n\n            <button className=\"generate-button\">Generate</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Generate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}